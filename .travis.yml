language: node_js
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-5
  code_climate:
    repo_token: 818b5b0a5d1c18b8e8fcc6ebb84e7a37364425a25e72d47ed1fb62ca74309cdb

env:
  - CXX=g++-5 DB=mongodb NODE_ENV=test
cache:
  directories:
    - node_modules
services:
  - mongodb
before_install:
  - npm install -g node-gyp istanbul
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq postfix
before_script:
  - sudo service postfix stop
  - smtp-sink -d "%d.%H.%M.%S" localhost:1025 1000 &
  - echo -e '#!/usr/bin/env bash\nexit 0' | sudo tee /usr/sbin/sendmail
jobs:
  include:
    - stage: test
      node_js:
        - '8'
        - '7'
        - '9'
        - '10'
      script:
        - npm run test

    - stage: coverage
      script:
        - npm run coverage
      after_success:
        - cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js
        - cat ./coverage/lcov.info | ./node_modules/.bin/codacy-coverage -p .
        - cat ./coverage/lcov.info | ./node_modules/.bin/codeclimate-test-reporter

    - stage: build docker image - base
      if: branch != master
      node_js: 8
      script:
        - docker build -f Dockerfile -t $REPO .
      after_success:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker tag $REPO $DOCKER_USER/$REPO:$TRAVIS_BRANCH
        - docker push $DOCKER_USER/$REPO:$TRAVIS_BRANCH

    - stage: build docker image - latest
      if: branch = master
      env:
      - IMAGE=$REPO DFILE=Dockerfile
      - IMAGE=populate-demo DFILE=DockerfileDevTools
      node_js: 8
      script:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker build -f $DFILE -t IMAGE .
        - docker tag IMAGE $DOCKER_USER/IMAGE:latest
        - docker push $DOCKER_USER/IMAGE:latest
